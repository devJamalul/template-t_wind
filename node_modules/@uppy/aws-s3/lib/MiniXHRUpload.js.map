{"version":3,"sources":["MiniXHRUpload.js"],"names":["emitSocketProgress","getSocketHost","EventTracker","ProgressTimeout","ErrorWithCause","NetworkError","isNetworkError","buildResponseError","xhr","error","err","cause","request","setTypeInBlob","file","dataWithUpdatedType","data","slice","size","meta","type","addMetadata","formData","opts","metaFields","Array","isArray","Object","keys","forEach","item","append","createFormDataUpload","formPost","FormData","name","fieldName","createBareUpload","MiniXHRUpload","constructor","uppy","Client","remote","providerOptions","provider","Provider","RequestClient","client","tus","assign","res","post","url","body","endpoint","fieldname","metadata","fromEntries","map","httpMethod","method","useFormData","headers","token","validateStatus","status","requests","internalRateLimitedQueue","uploaderEvents","create","i18n","wrapPromiseFunction","uploadFile","id","current","total","getFile","Error","isRemote","connectToServerSocket","Promise","resolve","reject","serverToken","host","companionUrl","socket","Socket","target","queuedRequest","run","isPaused","send","close","abort","reason","on","progressData","getResponseData","response","responseText","uploadURL","responseUrlFieldName","uploadResp","bytesUploaded","emit","done","remove","errData","resp","getResponseError","message","catch","overrides","getState","xhrUpload","eventName","fileID","eventHandler","targetFileID","log","XMLHttpRequest","timer","timeout","seconds","Math","ceil","upload","addEventListener","ev","loaded","progress","lengthComputable","uploader","bytesTotal","open","toUpperCase","withCredentials","Boolean","responseType","header","setRequestHeader","priority","setFileState"],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid/non-secure'\nimport { Provider, RequestClient, Socket } from '@uppy/companion-client'\nimport emitSocketProgress from '@uppy/utils/lib/emitSocketProgress'\nimport getSocketHost from '@uppy/utils/lib/getSocketHost'\nimport EventTracker from '@uppy/utils/lib/EventTracker'\nimport ProgressTimeout from '@uppy/utils/lib/ProgressTimeout'\nimport ErrorWithCause from '@uppy/utils/lib/ErrorWithCause'\nimport NetworkError from '@uppy/utils/lib/NetworkError'\nimport isNetworkError from '@uppy/utils/lib/isNetworkError'\nimport { internalRateLimitedQueue } from '@uppy/utils/lib/RateLimitedQueue'\n\n// See XHRUpload\nfunction buildResponseError (xhr, error) {\n  if (isNetworkError(xhr)) return new NetworkError(error, xhr)\n\n  const err = new ErrorWithCause('Upload error', { cause: error })\n  err.request = xhr\n  return err\n}\n\n// See XHRUpload\nfunction setTypeInBlob (file) {\n  const dataWithUpdatedType = file.data.slice(0, file.data.size, file.meta.type)\n  return dataWithUpdatedType\n}\n\nfunction addMetadata (formData, meta, opts) {\n  const metaFields = Array.isArray(opts.metaFields)\n    ? opts.metaFields\n    // Send along all fields by default.\n    : Object.keys(meta)\n  metaFields.forEach((item) => {\n    formData.append(item, meta[item])\n  })\n}\n\nfunction createFormDataUpload (file, opts) {\n  const formPost = new FormData()\n\n  addMetadata(formPost, file.meta, opts)\n\n  const dataWithUpdatedType = setTypeInBlob(file)\n\n  if (file.name) {\n    formPost.append(opts.fieldName, dataWithUpdatedType, file.meta.name)\n  } else {\n    formPost.append(opts.fieldName, dataWithUpdatedType)\n  }\n\n  return formPost\n}\n\nconst createBareUpload = file => file.data\n\nexport default class MiniXHRUpload {\n  #queueRequestSocketToken\n\n  constructor (uppy, opts) {\n    this.uppy = uppy\n    this.opts = {\n      validateStatus (status) {\n        return status >= 200 && status < 300\n      },\n      ...opts,\n    }\n\n    this.requests = opts[internalRateLimitedQueue]\n    this.uploaderEvents = Object.create(null)\n    this.i18n = opts.i18n\n\n    this.#queueRequestSocketToken = this.requests.wrapPromiseFunction(this.#requestSocketToken)\n  }\n\n  #getOptions (file) {\n    const { uppy } = this\n\n    const overrides = uppy.getState().xhrUpload\n    const opts = {\n      ...this.opts,\n      ...(overrides || {}),\n      ...(file.xhrUpload || {}),\n      headers: {\n        ...this.opts.headers,\n        ...overrides?.headers,\n        ...file.xhrUpload?.headers,\n      },\n    }\n\n    return opts\n  }\n\n  uploadFile (id, current, total) {\n    const file = this.uppy.getFile(id)\n    if (file.error) {\n      throw new Error(file.error)\n    } else if (file.isRemote) {\n      return this.#uploadRemoteFile(file, current, total)\n    }\n    return this.#uploadLocalFile(file, current, total)\n  }\n\n  #addEventHandlerForFile (eventName, fileID, eventHandler) {\n    this.uploaderEvents[fileID].on(eventName, (targetFileID) => {\n      if (fileID === targetFileID) eventHandler()\n    })\n  }\n\n  #addEventHandlerIfFileStillExists (eventName, fileID, eventHandler) {\n    this.uploaderEvents[fileID].on(eventName, (...args) => {\n      if (this.uppy.getFile(fileID)) eventHandler(...args)\n    })\n  }\n\n  #uploadLocalFile (file, current, total) {\n    const opts = this.#getOptions(file)\n\n    this.uppy.log(`uploading ${current} of ${total}`)\n    return new Promise((resolve, reject) => {\n      // This is done in index.js in the S3 plugin.\n      // this.uppy.emit('upload-started', file)\n\n      const data = opts.formData\n        ? createFormDataUpload(file, opts)\n        : createBareUpload(file, opts)\n\n      const xhr = new XMLHttpRequest()\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n      const timer = new ProgressTimeout(opts.timeout, () => {\n        xhr.abort()\n        // eslint-disable-next-line no-use-before-define\n        queuedRequest.done()\n        const error = new Error(this.i18n('timedOut', { seconds: Math.ceil(opts.timeout / 1000) }))\n        this.uppy.emit('upload-error', file, error)\n        reject(error)\n      })\n\n      const id = nanoid()\n\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} started`)\n      })\n\n      xhr.upload.addEventListener('progress', (ev) => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} progress: ${ev.loaded} / ${ev.total}`)\n        // Begin checking for timeouts when progress starts, instead of loading,\n        // to avoid timing out requests on browser concurrency queue\n        timer.progress()\n\n        if (ev.lengthComputable) {\n          this.uppy.emit('upload-progress', file, {\n            uploader: this,\n            bytesUploaded: ev.loaded,\n            bytesTotal: ev.total,\n          })\n        }\n      })\n\n      xhr.addEventListener('load', (ev) => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} finished`)\n        timer.done()\n        // eslint-disable-next-line no-use-before-define\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        if (opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {\n          const body = opts.getResponseData(xhr.responseText, xhr)\n          const uploadURL = body[opts.responseUrlFieldName]\n\n          const uploadResp = {\n            status: ev.target.status,\n            body,\n            uploadURL,\n          }\n\n          this.uppy.emit('upload-success', file, uploadResp)\n\n          if (uploadURL) {\n            this.uppy.log(`Download ${file.name} from ${uploadURL}`)\n          }\n\n          return resolve(file)\n        }\n        const body = opts.getResponseData(xhr.responseText, xhr)\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\n\n        const response = {\n          status: ev.target.status,\n          body,\n        }\n\n        this.uppy.emit('upload-error', file, error, response)\n        return reject(error)\n      })\n\n      xhr.addEventListener('error', () => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} errored`)\n        timer.done()\n        // eslint-disable-next-line no-use-before-define\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\n        this.uppy.emit('upload-error', file, error)\n        return reject(error)\n      })\n\n      xhr.open(opts.method.toUpperCase(), opts.endpoint, true)\n      // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called. It’s important to set withCredentials\n      // to a boolean, otherwise React Native crashes\n      xhr.withCredentials = Boolean(opts.withCredentials)\n      if (opts.responseType !== '') {\n        xhr.responseType = opts.responseType\n      }\n\n      Object.keys(opts.headers).forEach((header) => {\n        xhr.setRequestHeader(header, opts.headers[header])\n      })\n\n      const queuedRequest = this.requests.run(() => {\n        xhr.send(data)\n        return () => {\n          // eslint-disable-next-line no-use-before-define\n          timer.done()\n          xhr.abort()\n        }\n      }, { priority: 1 })\n\n      this.#addEventHandlerForFile('file-removed', file.id, () => {\n        queuedRequest.abort()\n        reject(new Error('File removed'))\n      })\n\n      this.#addEventHandlerIfFileStillExists('cancel-all', file.id, ({ reason } = {}) => {\n        if (reason === 'user') {\n          queuedRequest.abort()\n        }\n        reject(new Error('Upload cancelled'))\n      })\n    })\n  }\n\n  #requestSocketToken = async (file) => {\n    const opts = this.#getOptions(file)\n    const Client = file.remote.providerOptions.provider ? Provider : RequestClient\n    const client = new Client(this.uppy, file.remote.providerOptions)\n    const metaFields = Array.isArray(opts.metaFields)\n      ? opts.metaFields\n      // Send along all fields by default.\n      : Object.keys(file.meta)\n\n    if (file.tus) {\n      // Install file-specific upload overrides.\n      Object.assign(opts, file.tus)\n    }\n\n    const res = await client.post(file.remote.url, {\n      ...file.remote.body,\n      endpoint: opts.endpoint,\n      size: file.data.size,\n      fieldname: opts.fieldName,\n      metadata: Object.fromEntries(metaFields.map(name => [name, file.meta[name]])),\n      httpMethod: opts.method,\n      useFormData: opts.formData,\n      headers: opts.headers,\n    })\n    return res.token\n  }\n\n  async #uploadRemoteFile (file) {\n    try {\n      if (file.serverToken) {\n        return this.connectToServerSocket(file)\n      }\n      const serverToken = await this.#queueRequestSocketToken(file)\n\n      this.uppy.setFileState(file.id, { serverToken })\n      return this.connectToServerSocket(this.uppy.getFile(file.id))\n    } catch (err) {\n      this.uppy.emit('upload-error', file, err)\n      throw err\n    }\n  }\n\n  connectToServerSocket (file) {\n    return new Promise((resolve, reject) => {\n      const opts = this.#getOptions(file)\n      const token = file.serverToken\n      const host = getSocketHost(file.remote.companionUrl)\n      const socket = new Socket({ target: `${host}/api/${token}` })\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n      const queuedRequest = this.requests.run(() => {\n        if (file.isPaused) {\n          socket.send('pause', {})\n        }\n\n        return () => socket.close()\n      })\n\n      this.#addEventHandlerForFile('file-removed', file.id, () => {\n        socket.send('cancel', {})\n        queuedRequest.abort()\n        resolve(`upload ${file.id} was removed`)\n      })\n\n      this.#addEventHandlerIfFileStillExists('cancel-all', file.id, ({ reason } = {}) => {\n        if (reason === 'user') {\n          socket.send('cancel', {})\n          queuedRequest.abort()\n        }\n        resolve(`upload ${file.id} was canceled`)\n      })\n\n      this.#addEventHandlerForFile('upload-retry', file.id, () => {\n        socket.send('pause', {})\n        socket.send('resume', {})\n      })\n\n      this.#addEventHandlerIfFileStillExists('retry-all', file.id, () => {\n        socket.send('pause', {})\n        socket.send('resume', {})\n      })\n\n      socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))\n\n      socket.on('success', (data) => {\n        const body = opts.getResponseData(data.response.responseText, data.response)\n        const uploadURL = body[opts.responseUrlFieldName]\n\n        const uploadResp = {\n          status: data.response.status,\n          body,\n          uploadURL,\n          bytesUploaded: data.bytesUploaded,\n        }\n\n        this.uppy.emit('upload-success', file, uploadResp)\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n        return resolve()\n      })\n\n      socket.on('error', (errData) => {\n        const resp = errData.response\n        const error = resp\n          ? opts.getResponseError(resp.responseText, resp)\n          : new ErrorWithCause(errData.error.message, { cause: errData.error })\n        this.uppy.emit('upload-error', file, error)\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n        reject(error)\n      })\n    }).catch((err) => {\n      this.uppy.emit('upload-error', file, err)\n      return Promise.reject(err)\n    })\n  }\n}\n"]}